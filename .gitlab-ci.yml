stages:
  - prepare
  - release
  - release-github

prepare:
  stage: prepare
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - echo "EXTRA_DESCRIPTION=Release v$(cat VERSION)" >> variables.env
    - echo "TAG=v$(cat VERSION)" >> variables.env
  artifacts:
    reports:
      dotenv: variables.env

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  tags:
    - docker-executor
  needs:
    - job: prepare
      artifacts: true
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - echo "running release_job for $TAG"
  release:
    name: 'Release $TAG'
    description: '$EXTRA_DESCRIPTION'
    tag_name: '$TAG'
    ref: '$CI_COMMIT_SHA'

release-github:
  stage: release-github
  tags:
    - shell-executor
  rules:
    - if: $CI_COMMIT_TAG
  cache: { }
  dependencies: [ ]
  script:
    - >
      curl
      -X POST
      -H "Authorization: token $GITHUB_OAUTH_TOKEN"
      -H "Accept: application/vnd.github.v3+json"
      https://api.github.com/repos/stylers-llc/ansible-gitlab-runner/releases
      -d '{"tag_name":"$CI_COMMIT_TAG"}'
